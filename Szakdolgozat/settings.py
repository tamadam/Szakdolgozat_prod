"""
Django settings for Szakdolgozat project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
BASE_URL = "http://localhost:8000"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*e3*h1whg&qkt44yq#$v%lv3q(5jvuot1jml501imdr$o2d#1_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# let django know that use my user model
AUTH_USER_MODEL = 'account.Account'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'channels', 
    'django.contrib.humanize', # már nem használom

    # own apps
    'core',
    'account',
    'public_chat',
    'private_chat',
    'team',
    'notification',
    'game',
    # third party apps

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # added

]

ROOT_URLCONF = 'Szakdolgozat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],

            # sidebar-nál ennek a segítségével jelenítünk meg információkat
            # template tag
            'libraries':{
                'user_info_tags': 'templatetags.user_info_tags',
            }
        },
    },
]

WSGI_APPLICATION = 'Szakdolgozat.wsgi.application'

ASGI_APPLICATION = 'Szakdolgozat.routing.application'

#REDIS
#https://github.com/django/channels_redis
#élesben sem változik ez a config, mivel akkor is a lokális szerveren fog futni
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('127.0.0.1', '6379')], # alap redis port
        },
    },
}


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
#UserAttributeSimilarityValidator (checks for similarity between the password and a set of attributes of the user)
#MinimumLengthValidator (checks whether the password meets a minimum length)
#CommonPasswordValidator (checks whether the password occurs in a list of common passwords)
#NumericPasswordValidator (checks whether the password isn’t entirely numeric)

# az accountnal a registrationnél ellenorizzuk manualisan amit kell

"""

    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },

"""
#
AUTH_PASSWORD_VALIDATORS = [


]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Budapest'

USE_I18N = True

USE_L10N = True

USE_TZ = False # amúgy 2 órával hamarabbi időt mutat


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'


STATICFILES_DIRS = [ # base directory to the static folder
    #BASE_DIR / 'static', # os.path.join(BASE_DIR, 'static')
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # content delivery network
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#TEMP - crop images


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
